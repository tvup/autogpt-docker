apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autogpt-app.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "autogpt-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "autogpt-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          {{- range $key, $val := .Values.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
          - name: "PORT"
            value: "50001"
          readinessProbe:
            tcpSocket:
              port: 50001
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            tcpSocket:
              port: 50001
            initialDelaySeconds: 15
            periodSeconds: 20
          tty: true
          volumeMounts:
            - name: workspace
              mountPath: /app/autogpt/auto_gpt_workspace
            - name: logs
              mountPath: /app/logs
            - name: data
              mountPath: /app/data
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chown -R 1000:1000 /app/autogpt/auto_gpt_workspace" ]
          volumeMounts:
            - name: workspace
              mountPath: /app/autogpt/auto_gpt_workspace
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      volumes:
      - name: workspace
        persistentVolumeClaim:
          claimName: {{ include "autogpt-app.fullname" . }}-workspace-claim
      - name: logs
        persistentVolumeClaim:
          claimName: {{ include "autogpt-app.fullname" . }}-logs-claim
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "autogpt-app.fullname" . }}-data-claim
