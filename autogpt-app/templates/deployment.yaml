apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autogpt-app.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "autogpt-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "autogpt-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          {{- range $key, $val := .Values.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
          - name: "PORT"
            value: "50001"
          - name: CUSTOM_SEARCH_ENGINE_ID
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: CUSTOM_SEARCH_ENGINE_ID
          - name: ELEVENLABS_API_KEY
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: ELEVENLABS_API_KEY
          - name: ELEVENLABS_VOICE_1_ID
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: ELEVENLABS_VOICE_1_ID
          - name: ELEVENLABS_VOICE_2_ID
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: ELEVENLABS_VOICE_2_ID
          - name: EXECUTE_LOCAL_COMMANDS
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: EXECUTE_LOCAL_COMMANDS
          - name: FAST_LLM_MODEL
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: FAST_LLM_MODEL
          - name: GOOGLE_API_KEY
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: GOOGLE_API_KEY
          - name: HUGGINGFACE_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: HUGGINGFACE_API_TOKEN
          - name: IMAGE_PROVIDER
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: IMAGE_PROVIDER
          - name: MEMORY_BACKEND
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: MEMORY_BACKEND
          - name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: OPENAI_API_KEY
          - name: OPENAI_AZURE_API_BASE
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: OPENAI_AZURE_API_BASE
          - name: OPENAI_AZURE_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: OPENAI_AZURE_API_VERSION
          - name: OPENAI_AZURE_DEPLOYMENT_ID
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: OPENAI_AZURE_DEPLOYMENT_ID
          - name: PINECONE_API_KEY
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: PINECONE_API_KEY
          - name: PINECONE_ENV
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: PINECONE_ENV
          - name: PULSE_SERVER
            value: unix:/run/user/1000/pulse/native
          - name: RAPID_API_KEY
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: RAPID_API_KEY
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: REDIS_HOST
          - name: REDIS_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: REDIS_PASSWORD
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: REDIS_PORT
          - name: RESTRICT_TO_WORKSPACE
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: RESTRICT_TO_WORKSPACE
          - name: SMART_LLM_MODEL
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: SMART_LLM_MODEL
          - name: USE_AZURE
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: USE_AZURE
          - name: USE_MAC_OS_TTS
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: USE_MAC_OS_TTS
          - name: U_COOKIE
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: U_COOKIE
          - name: WIPE_REDIS_ON_START
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: WIPE_REDIS_ON_START
          - name: CHAT_HISTORY_FILE
            valueFrom:
              configMapKeyRef:
                name: app-configs
                key: CHAT_HISTORY_FILE
          readinessProbe:
            tcpSocket:
              port: 50001
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            tcpSocket:
              port: 50001
            initialDelaySeconds: 15
            periodSeconds: 20
          tty: true
          volumeMounts:
            - name: workspace
              mountPath: /app/autogpt/auto_gpt_workspace
            - name: logs
              mountPath: /app/logs
            - name: data
              mountPath: /app/data
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: [ "sh", "-c", "chown -R 1000:1000 /app/auto_gpt_workspace" ]
          volumeMounts:
            - name: workspace
              mountPath: /app/autogpt/auto_gpt_workspace
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      volumes:
      - name: workspace
        persistentVolumeClaim:
          claimName: {{ include "autogpt-app.fullname" . }}-workspace-claim
      - name: logs
        persistentVolumeClaim:
          claimName: {{ include "autogpt-app.fullname" . }}-logs-claim
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "autogpt-app.fullname" . }}-data-claim